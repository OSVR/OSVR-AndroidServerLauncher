# Generated by CMake 3.1.0

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget osvr::osvrUtil osvr::osvrUtilCpp osvr::osvrCommon osvr::osvrPluginHost osvr::osvrConnection osvr::osvrPluginKit osvr::osvrPluginKitCpp osvr::osvrPluginKitImaging osvr::osvrServer osvr::osvrVRPNServer osvr::osvrClient osvr::osvrClientKit osvr::osvrClientKitCpp osvr::osvrClientKitImaging osvr::osvrAnalysisPluginKit osvr::osvrJointClientKit)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Compute the installation prefix relative to this file.
get_filename_component(_IMPORT_PREFIX "${CMAKE_CURRENT_LIST_FILE}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)
get_filename_component(_IMPORT_PREFIX "${_IMPORT_PREFIX}" PATH)

# Create imported target osvr::osvrUtil
add_library(osvr::osvrUtil SHARED IMPORTED)

set_target_properties(osvr::osvrUtil PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
)

# Create imported target osvr::osvrUtilCpp
add_library(osvr::osvrUtilCpp INTERFACE IMPORTED)

set_target_properties(osvr::osvrUtilCpp PROPERTIES
  INTERFACE_COMPILE_OPTIONS "-std=c++11"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "osvr::osvrUtil"
)

# Create imported target osvr::osvrCommon
add_library(osvr::osvrCommon SHARED IMPORTED)

set_target_properties(osvr::osvrCommon PROPERTIES
  COMPATIBLE_INTERFACE_STRING "osvrcore_MAJOR_VERSION"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "osvr::osvrUtilCpp"
  INTERFACE_osvrcore_MAJOR_VERSION "0"
)

# Create imported target osvr::osvrPluginHost
add_library(osvr::osvrPluginHost SHARED IMPORTED)

set_target_properties(osvr::osvrPluginHost PROPERTIES
  COMPATIBLE_INTERFACE_STRING "osvrcore_MAJOR_VERSION"
  INTERFACE_COMPILE_OPTIONS "-std=c++11"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "libfunctionality::functionality;osvr::osvrUtilCpp"
  INTERFACE_osvrcore_MAJOR_VERSION "0"
)

# Create imported target osvr::osvrConnection
add_library(osvr::osvrConnection SHARED IMPORTED)

set_target_properties(osvr::osvrConnection PROPERTIES
  COMPATIBLE_INTERFACE_STRING "osvrcore_MAJOR_VERSION"
  INTERFACE_COMPILE_OPTIONS "-std=c++11"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "osvr::osvrPluginHost;osvr::osvrUtil"
  INTERFACE_osvrcore_MAJOR_VERSION "0"
)

# Create imported target osvr::osvrPluginKit
add_library(osvr::osvrPluginKit SHARED IMPORTED)

set_target_properties(osvr::osvrPluginKit PROPERTIES
  COMPATIBLE_INTERFACE_STRING "osvrcore_MAJOR_VERSION"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "libfunctionality::functionality-plugininterface"
  INTERFACE_osvrcore_MAJOR_VERSION "0"
)

# Create imported target osvr::osvrPluginKitCpp
add_library(osvr::osvrPluginKitCpp INTERFACE IMPORTED)

set_target_properties(osvr::osvrPluginKitCpp PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "osvr::osvrPluginKit;osvr::osvrUtil"
)

# Create imported target osvr::osvrPluginKitImaging
add_library(osvr::osvrPluginKitImaging INTERFACE IMPORTED)

set_target_properties(osvr::osvrPluginKitImaging PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "osvr::osvrPluginKit;osvr::osvrPluginKitCpp"
)

# Create imported target osvr::osvrServer
add_library(osvr::osvrServer SHARED IMPORTED)

set_target_properties(osvr::osvrServer PROPERTIES
  COMPATIBLE_INTERFACE_STRING "osvrcore_MAJOR_VERSION"
  INTERFACE_COMPILE_OPTIONS "-std=c++11"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "osvr::osvrConnection;osvr::osvrPluginHost"
  INTERFACE_osvrcore_MAJOR_VERSION "0"
)

# Create imported target osvr::osvrVRPNServer
add_library(osvr::osvrVRPNServer SHARED IMPORTED)

set_target_properties(osvr::osvrVRPNServer PROPERTIES
  COMPATIBLE_INTERFACE_STRING "osvrcore_MAJOR_VERSION"
  INTERFACE_COMPILE_OPTIONS "-std=c++11"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "osvr::osvrConnection;osvr::osvrPluginKitCpp;osvr::osvrUtilCpp"
  INTERFACE_osvrcore_MAJOR_VERSION "0"
)

# Create imported target osvr::osvrClient
add_library(osvr::osvrClient SHARED IMPORTED)

set_target_properties(osvr::osvrClient PROPERTIES
  COMPATIBLE_INTERFACE_STRING "osvrcore_MAJOR_VERSION"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;/opt/crystax-ndk-10.1.0/sources/boost/1.57.0/include;${_IMPORT_PREFIX}/include"
  INTERFACE_osvrcore_MAJOR_VERSION "0"
)

# Create imported target osvr::osvrClientKit
add_library(osvr::osvrClientKit SHARED IMPORTED)

set_target_properties(osvr::osvrClientKit PROPERTIES
  COMPATIBLE_INTERFACE_STRING "osvrcore_MAJOR_VERSION"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "osvr::osvrUtil"
  INTERFACE_osvrcore_MAJOR_VERSION "0"
)

# Create imported target osvr::osvrClientKitCpp
add_library(osvr::osvrClientKitCpp INTERFACE IMPORTED)

set_target_properties(osvr::osvrClientKitCpp PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "osvr::osvrClientKit"
)

# Create imported target osvr::osvrClientKitImaging
add_library(osvr::osvrClientKitImaging INTERFACE IMPORTED)

set_target_properties(osvr::osvrClientKitImaging PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "osvr::osvrClientKit;osvr::osvrClientKitCpp"
)

# Create imported target osvr::osvrAnalysisPluginKit
add_library(osvr::osvrAnalysisPluginKit SHARED IMPORTED)

set_target_properties(osvr::osvrAnalysisPluginKit PROPERTIES
  COMPATIBLE_INTERFACE_STRING "osvrcore_MAJOR_VERSION"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "osvr::osvrPluginKit;osvr::osvrClientKit"
  INTERFACE_osvrcore_MAJOR_VERSION "0"
)

# Create imported target osvr::osvrJointClientKit
add_library(osvr::osvrJointClientKit SHARED IMPORTED)

set_target_properties(osvr::osvrJointClientKit PROPERTIES
  COMPATIBLE_INTERFACE_STRING "osvrcore_MAJOR_VERSION"
  INTERFACE_INCLUDE_DIRECTORIES "${_IMPORT_PREFIX}/include;${_IMPORT_PREFIX}/include"
  INTERFACE_LINK_LIBRARIES "osvr::osvrClientKit;osvr::osvrUtil"
  INTERFACE_osvrcore_MAJOR_VERSION "0"
)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Load information for each installed configuration.
get_filename_component(_DIR "${CMAKE_CURRENT_LIST_FILE}" PATH)
file(GLOB CONFIG_FILES "${_DIR}/osvrTargets-*.cmake")
foreach(f ${CONFIG_FILES})
  include(${f})
endforeach()

# Cleanup temporary variables.
set(_IMPORT_PREFIX)

# Loop over all imported files and verify that they actually exist
foreach(target ${_IMPORT_CHECK_TARGETS} )
  foreach(file ${_IMPORT_CHECK_FILES_FOR_${target}} )
    if(NOT EXISTS "${file}" )
      message(FATAL_ERROR "The imported target \"${target}\" references the file
   \"${file}\"
but this file does not exist.  Possible reasons include:
* The file was deleted, renamed, or moved to another location.
* An install or uninstall procedure did not complete successfully.
* The installation package was faulty and contained
   \"${CMAKE_CURRENT_LIST_FILE}\"
but not all the files it references.
")
    endif()
  endforeach()
  unset(_IMPORT_CHECK_FILES_FOR_${target})
endforeach()
unset(_IMPORT_CHECK_TARGETS)

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
